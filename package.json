{
  "name": "my-next-template",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@sanity/asset-utils": "^1.3.0",
    "@sanity/image-url": "^1.0.2",
    "@sanity/types": "^3.7.0",
    "@sanity/ui": "^1.3.0",
    "@sanity/vision": "^3.7.0",
    "@types/node": "20.2.5",
    "@types/react": "18.2.8",
    "@types/react-dom": "18.2.4",
    "autoprefixer": "10.4.14",
    "class-variance-authority": "^0.6.0",
    "clsx": "^1.2.1",
    "eslint": "8.42.0",
    "eslint-config-next": "13.4.4",
    "lucide-react": "^0.236.0",
    "next": "13.4.4",
    "next-sanity": "^4.1.5",
    "next-sanity-image": "^6.0.0",
    "postcss": "8.4.24",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-icons": "^4.9.0",
    "sanity": "^3.7.0",
    "slugify": "^1.6.6",
    "styled-components": "^6.0.0-rc.3",
    "tailwind-merge": "^1.13.0",
    "tailwindcss": "3.3.2",
    "tailwindcss-animate": "^1.0.5",
    "typescript": "5.1.3"
  },
  "prettier": {
    "singleQuote": true,
    "jsxSingleQuote": true,
    "trailingComma": "none",
    "bracketSpacing": false
  },
  "eslintConfig": {
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "next",
      "next/core-web-vitals",
      "plugin:@typescript-eslint/recommended",
      "prettier"
    ],
    "rules": {
      "semi": "error",
      "comma-dangle": "off",
      "no-multiple-empty-lines": "error",
      "no-multi-spaces": "error",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/comma-dangle": [
        "error"
      ],
      "comma-spacing": "off",
      "@typescript-eslint/comma-spacing": [
        "error",
        {
          "before": false,
          "after": true
        }
      ],
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/explicit-module-boundary-types": "off",
      "@typescript-eslint/consistent-type-assertions": [
        "error",
        {
          "assertionStyle": "as",
          "objectLiteralTypeAssertions": "allow-as-parameter"
        }
      ]
    }
  }
}
